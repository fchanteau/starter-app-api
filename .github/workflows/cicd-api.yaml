name: Build and Test API / Build Docker image and push to Docker Hub

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "CleanArchiStarterTemplate/**"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            nuget-${{ runner.os }}-

      - name: Restore dependencies
        working-directory: ./CleanArchiStarterTemplate
        run: dotnet restore

      - name: Build with dotnet
        working-directory: ./CleanArchiStarterTemplate
        run: dotnet build --configuration Release --no-restore

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: ./CleanArchiStarterTemplate/**/bin/Release/net8.0/

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: ./CleanArchiStarterTemplate/

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            nuget-${{ runner.os }}-

      - name: Restore dependencies
        working-directory: ./CleanArchiStarterTemplate
        run: dotnet restore

      - name: Test with dotnet
        working-directory: ./CleanArchiStarterTemplate
        run: dotnet test --configuration Release --no-build --verbosity normal

  docker:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Set short SHA
        id: vars
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Set Docker tags
        id: docker_tags
        run: |
          TAGS="${{ secrets.DOCKER_USERNAME }}/starter-app:${GITHUB_REF_NAME}.${SHORT_SHA}"
          if [ "${GITHUB_REF_NAME}" = "main" ]; then
            TAGS="$TAGS,${{ secrets.DOCKER_USERNAME }}/starter-app:latest"
          fi
          echo "tags=$TAGS" >> $GITHUB_OUTPUT

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./CleanArchiStarterTemplate
          file: ./CleanArchiStarterTemplate/Dockerfile
          push: true
          tags: ${{ steps.docker_tags.outputs.tags }}
